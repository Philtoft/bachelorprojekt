[
    {
        "context": "Computer Security: Measures and controls that ensure confidentiality, integrity, and availability of information system assets including hardware, software, firm- ware, and information being processed, stored, and communicated. Confidentiality: This term covers two related concepts: Data confidentiality: Assures that private or confidential information is not made available or disclosed to unauthorized individuals. Privacy: Assures that individuals control or influence what information related to them may be collected and stored and by whom and to whom that information may be disclosed. Integrity: This term covers two related concepts: Data integrity: Assures that information and programs are changed only in a specified and authorized manner.",
        "questions_answers": [
            {
                "question": "What measures and controls ensure confidentiality and integrity of information system assets?",
                "answer": {
                    "score": 0.9845007658004761,
                    "start": 0,
                    "end": 17,
                    "answer": "Computer Security"
                }
            },
            {
                "question": "What defines confidential information?",
                "answer": {
                    "score": 0.21573422849178314,
                    "start": 284,
                    "end": 304,
                    "answer": "Data confidentiality"
                }
            },
            {
                "question": "Who controls what information related to them?",
                "answer": {
                    "score": 0.12113242596387863,
                    "start": 441,
                    "end": 534,
                    "answer": "individuals control or influence what information related to them may be collected and stored"
                }
            }
        ]
    },
    {
        "context": "System integrity: Assures that a system performs its intended function in an unimpaired manner, free from deliberate or inadvertent unauthorized manipulation of the system. Authenticity: The property of being genuine and being able to be verified and trusted; confidence in the validity of a transmission, a message, or message originator. This means verifying that users are who they say they are and that each input arriving at the system came from a trusted source. Availability: Assures that systems work promptly and service is not denied to authorized users. Accountability: The security goal that generates the requirement for actions of an entity to be traced uniquely to that entity.",
        "questions_answers": [
            {
                "question": "What does System integrity mean?",
                "answer": {
                    "score": 0.007428138516843319,
                    "start": 18,
                    "end": 70,
                    "answer": "Assures that a system performs its intended function"
                }
            },
            {
                "question": "What is the property of being authentically authenticated?",
                "answer": {
                    "score": 0.2806585729122162,
                    "start": 221,
                    "end": 258,
                    "answer": "being able to be verified and trusted"
                }
            }
        ]
    },
    {
        "context": "This supports nonrepudiation, deterrence, fault isolation, intrusion detection and prevention, and after-action recovery and legal action. Because truly secure systems are not yet an achiev- able goal, we must be able to trace a security breach to a responsible party. Systems must keep records of their activities to permit later forensic analysis to trace security breaches or to aid in transaction disputes. Active attack: An attempt to alter system resources or affect their operation. Passive attack: An attempt to learn or make use of information from the system that does not affect system resources. We can also classify attacks based on the origin of the attack: Inside attack: Initiated by an entity inside the security perimeter (an\u201cinsider\u201d).",
        "questions_answers": [
            {
                "question": "What types of systems must keep records of their activities?",
                "answer": {
                    "score": 0.30521485209465027,
                    "start": 153,
                    "end": 159,
                    "answer": "secure"
                }
            },
            {
                "question": "What type of attack should we attempt to learn or make use of information from the system that does not affect system resources?",
                "answer": {
                    "score": 0.47070595622062683,
                    "start": 490,
                    "end": 504,
                    "answer": "Passive attack"
                }
            }
        ]
    },
    {
        "context": "The insider is authorized to access system resources but uses them in a way not approved by those who granted the authorization. Outside attack: Initiated from outside theperimeter, by an unauthorized or illegitimate user of the system (an \u201coutsider\u201d). On the Internet, potential outside attackers range from amateur pranksters to organized criminals, international terrorists, and hostile governments. Economy of mechanism Simple and small Easier to test and verify Fail-safe defaults Permission rather than exclusion System starts in safe and returns to safe state in case of failure Firewall port allowed list Complete mediation Access control at retrieval of data Careful of cached access Open design Encryption algorithms should be public and prone to feedback Security should not depend on algorithm being secret Separation of privilege Multifactor authentication No single point of failure Key technique: separation of duty Least privilege Only has the least amount of privileges necessary to perform a task Least common mechanism Minimise the functions shared by different users Minimum exposure Minimise the attack surface a system presents to the adversary Reduce external interfaces Limit information and window of opportunity Psychological acceptability Design usable security mechanisms\u201d Help the user to make the right choice Isolation Public access systems should be isolated from critical resources or information Security mechanisms should be isolated in the sense of preventing access to those mechanisms.",
        "questions_answers": [
            {
                "question": "What type of person is authorized to access system resources but uses them differently than those who granted authorization?",
                "answer": {
                    "score": 0.5722523927688599,
                    "start": 0,
                    "end": 11,
                    "answer": "The insider"
                }
            },
            {
                "question": "What types of attackers range from amateur pranksters to organized criminals?",
                "answer": {
                    "score": 0.5087941884994507,
                    "start": 270,
                    "end": 297,
                    "answer": "potential outside attackers"
                }
            }
        ]
    },
    {
        "context": "For example, logical access control may provide a means of isolating cryptographic software from other parts of the host system and for protecting cryptographic software from tampering and the keys from replacement or disclosure. Encapsulation Subset of isolation Wrapped data and procedures in system that provides protected access points Modularity development of security functions as separate, protected modules, and to the use of a modular architecture for mechanism design and implementation. Layering use of multiple, overlapping protection approaches addressing the people, technology, and operational aspects of information systems The failure of one approach does not compromise entire system as others are still working Least astonishment a program or user interface should always respond in the way that is least likely to astonish the user Network attack surface: This category refers to vulnerabilities over an enterprise network, wide-area network, or the Internet.",
        "questions_answers": [
            {
                "question": "What type of security measures protect cryptographic software from other parts of the host system?",
                "answer": {
                    "score": 0.9923876523971558,
                    "start": 13,
                    "end": 35,
                    "answer": "logical access control"
                }
            },
            {
                "question": "What types of security approaches address people, technology and operational aspects of information systems?",
                "answer": {
                    "score": 0.3544887602329254,
                    "start": 515,
                    "end": 536,
                    "answer": "multiple, overlapping"
                }
            }
        ]
    },
    {
        "context": "Included in this category are net- work protocol vulnerabilities, such as those used for a denial-of-service attack, disruption of communications links, and various forms of intruder attacks. Software attack surface: This refers to vulnerabilities in application, utility, or operating system code. A particular focus in this category is Web server software. Human attack surface: This category refers to vulnerabilities created by person- nel or outsiders, such as social engineering, human error, and trusted insiders. 1.1: There is an access card to ensure confidentiality and a password that goes with it. Data integrity is kept because people can have the same name but have different student numbers.",
        "questions_answers": [
            {
                "question": "What types of vulnerabilities are included in this category?",
                "answer": {
                    "score": 0.4303712248802185,
                    "start": 30,
                    "end": 64,
                    "answer": "net- work protocol vulnerabilities"
                }
            },
            {
                "question": "What type of vulnerabilities does software attack surface refer to?",
                "answer": {
                    "score": 0.7055555582046509,
                    "start": 232,
                    "end": 297,
                    "answer": "vulnerabilities in application, utility, or operating system code"
                }
            },
            {
                "question": "Who created vulnerabilities created vulnerabilities?",
                "answer": {
                    "score": 0.804246187210083,
                    "start": 432,
                    "end": 456,
                    "answer": "person- nel or outsiders"
                }
            }
        ]
    },
    {
        "context": "Least priviledge principle ensures integrity because a student can only change their own information. Availability, have network with ddos security. All systems should be up and running card-reader website server 1.4: Low confidentiality because no private information Low-high availability because it all depends on which information is available, the weather we can live without, but if the stock market goes down. Moderate-high integrity because people can mess with the public data shown. Defamation, private information, High confidentiality, well it\u2019s extremely sensitive data Low-moderate, you will need a log kept because data is not changing much, and this is a good tradeoff.",
        "questions_answers": [
            {
                "question": "What principle ensures integrity because students can only change their own information?",
                "answer": {
                    "score": 0.5506485104560852,
                    "start": 0,
                    "end": 16,
                    "answer": "Least priviledge"
                }
            },
            {
                "question": "What principle guarantees integrity Because people can mess with the public data?",
                "answer": {
                    "score": 0.4262029230594635,
                    "start": 417,
                    "end": 440,
                    "answer": "Moderate-high integrity"
                }
            }
        ]
    },
    {
        "context": "High integrity, changing names of suspects, agents and such High confidentiality, the adversary knows everything about the infrastructure of the organisation and will know when to the possible human attack surface 1.5: flip boolean and logic IT-department: It should not be adopted because, however it is better than having nothing, and we are proposing a modified policy because of: Economy of mechanism, 7 options are a lot Single point of failure, SMS and call, iris and fingerprint Least astonishment Minimum exposure, minimise attack surface Group Theory 1.1: Closure, associativity, Identity-element, inverse, (communicative for Abelian) 1.2: Closure: It is always a 16-bit string Associativity: (1111 XOR 1011) XOR 1001 = 1111 XOR (1011 XOR 1001) Identity-element: 0000 0000 0000 0000 Inverse: XOR by itself 1.",
        "questions_answers": [
            {
                "question": "What does the adversary know about the infrastructure of the organisation?",
                "answer": {
                    "score": 0.3177260160446167,
                    "start": 0,
                    "end": 80,
                    "answer": "High integrity, changing names of suspects, agents and such High confidentiality"
                }
            },
            {
                "question": "What is better than having nothing?",
                "answer": {
                    "score": 0.18165616691112518,
                    "start": 193,
                    "end": 213,
                    "answer": "human attack surface"
                }
            },
            {
                "question": "How many options are there?",
                "answer": {
                    "score": 0.6898913979530334,
                    "start": 406,
                    "end": 407,
                    "answer": "7"
                }
            }
        ]
    },
    {
        "context": "3: Closure: always wraps around Associativity: Yes, it is addition Identity-element: 0 Inverse: 20-x = 0, so the inverse element is the result of that equation 2.1: No inverse, limited to integers, so no rational numbers to return to the identity element 2.2: No inverse, cannot remove when concatenating..",
        "questions_answers": [
            {
                "question": "What does Closure wrap around Associativity?",
                "answer": {
                    "score": 0.2195529192686081,
                    "start": 52,
                    "end": 104,
                    "answer": "it is addition Identity-element: 0 Inverse: 20-x = 0"
                }
            },
            {
                "question": "What is the result of that equation?",
                "answer": {
                    "score": 0.496328741312027,
                    "start": 109,
                    "end": 128,
                    "answer": "the inverse element"
                }
            }
        ]
    }
]