[
	{
		"context": "Android Development Android Components Activities Represents a single screen with a user interface, in-short Activity performs actions on the screen and answer to the events on the UI components. Services A service is a component that runs in the application background to perform long-running operations. User services: when the user starts a service, the app tells App services Broadcast Receivers Broadcast Receivers simply respond to broadcast messages from other application or from the Android operating system. Content Providers A content provider component supplies data from one application to others on request. Introduction to Kotlin tirsdag 8. februar Variable: Var indicates that you want to declare a new variable.",
		"questions_answers": [
			{
				"question": "What is a component that runs in the application background to perform long-running operations?",
				"answer": {
					"score": 0.984941840171814,
					"start": 196,
					"end": 214,
					"answer": "Services A service"
				}
			},
			{
				"question": "What is the name of a service that is used in the app background?",
				"answer": {
					"score": 0.05799558758735657,
					"start": 196,
					"end": 214,
					"answer": "Services A service"
				}
			},
			{
				"question": "What does a content provider component supply data from one application to others on request?",
				"answer": {
					"score": 0.07484911382198334,
					"start": 438,
					"end": 516,
					"answer": "broadcast messages from other application or from the Android operating system"
				}
			}
		]
	},
	{
		"context": "Read-only variable: Val indicates a new immutable variable, a constant. App Resources and Basic UI tirsdag 15. februar Android App Manifest Package name: Determine the location of code entities when building your project Permissions: Set permissions to access content from the app, e.g. access contacts in WhatsApp. Components: Information about activities, services, broadcast receivers and content providers. Requirements: Requirements of software and hardware Color and style in res folder. Intent class Explicit Intents - Used in the context of your application, in which you can start internal components. You define what will happen when you do something, mapping activity.",
		"questions_answers": [
			{
				"question": "What is a constant variable that indicates a new immutable variable?",
				"answer": {
					"score": 0.9448847770690918,
					"start": 20,
					"end": 23,
					"answer": "Val"
				}
			},
			{
				"question": "What is the name of the Android App Manifest Package?",
				"answer": {
					"score": 0.9878771901130676,
					"start": 111,
					"end": 118,
					"answer": "februar"
				}
			},
			{
				"question": "What are the requirements for software and hardware Color and style in res folder?",
				"answer": {
					"score": 0.09830521792173386,
					"start": 316,
					"end": 409,
					"answer": "Components: Information about activities, services, broadcast receivers and content providers"
				}
			}
		]
	},
	{
		"context": "You explicitly state what you want. Implicit Intents E.g I want to take a photo. You can say \u201cI want to send a mail\u201d, then it can be suggested that you want to open the mail app, but you don\u2019t explicitly say what you want the phone to do, you imply it. Aim to start a component in another application. More in lecture 9 Android Jetpack Suite of Android libraries to reduce boilerplate code, like lifecycle management, background tasks. Reduce complexity with libraries that work consistently across Android versions and devices. By lazy, means I will only instantiate this if I use it, or else it doesn\u2019t exist.",
		"questions_answers": [
			{
				"question": "What can be suggested that you want to open a mail app?",
				"answer": {
					"score": 0.038252703845500946,
					"start": 183,
					"end": 237,
					"answer": "you don\u2019t explicitly say what you want the phone to do"
				}
			},
			{
				"question": "What is the name of a component in a new application?",
				"answer": {
					"score": 0.1665395200252533,
					"start": 222,
					"end": 231,
					"answer": "the phone"
				}
			},
			{
				"question": "How can I reduce complexity with libraries that work consistently across Android versions and devices?",
				"answer": {
					"score": 0.20867988467216492,
					"start": 328,
					"end": 335,
					"answer": "Jetpack"
				}
			}
		]
	},
	{
		"context": "Share objects/data between activities with intent. Material design and fragments tirsdag 22. februar One critical difference between the fragment lifecycle and the activity lifecycle is that fragment lifecycle functions are called by the FragmentManager of the hosting activity, not the OS. The OS knows nothing about the fragments that an activity is using to manage things. Fragments are the activity\u2019s internal business. The onAttach(Context?), onCreate(Bundle?), onCreateView(...), and onViewCreated(...) functions are called when you add the fragment to the FragmentManager. Difference between activity and fragment? Activity has three steps: Java/Kotlin class file, XML layout and add to manifest Fragments do not need to be added in the manifest, only two files, namely: Java/Kotlin class file and XML layout.",
		"questions_answers": [
			{
				"question": "What is the difference between the fragment lifecycle and the activity lifecycle?",
				"answer": {
					"score": 0.45172950625419617,
					"start": 191,
					"end": 277,
					"answer": "fragment lifecycle functions are called by the FragmentManager of the hosting activity"
				}
			},
			{
				"question": "How many files do the Java/Kotlin class file and add to manifest Fragments do not need to be added in?",
				"answer": {
					"score": 0.6180360913276672,
					"start": 759,
					"end": 762,
					"answer": "two"
				}
			},
			{
				"question": "What does the FragmentManager know about the fragments that an activity is using to manage things?",
				"answer": {
					"score": 0.751065194606781,
					"start": 291,
					"end": 311,
					"answer": "The OS knows nothing"
				}
			},
			{
				"question": "What is a key difference between activity and fragment?",
				"answer": {
					"score": 0.43817928433418274,
					"start": 191,
					"end": 277,
					"answer": "fragment lifecycle functions are called by the FragmentManager of the hosting activity"
				}
			}
		]
	},
	{
		"context": "On rotate, update savedInstanceState to resume to where you were on the screen. ViewHolder is not mandatory with list view, but it is the best way to do it, also with performance. But with recycle view, it is necessary with a view holder. RecyclerView library must be added as a dependency library in your project. Slide #5 page 5. Views use ViewHolders and Adapters to select a small sample form a large data set. It only provides a limited number of the items that can be shown in the screen. Flexible Data View and Thread RecyclerView vs ListView When an item scrolls off the screen, RecyclerView doesn\u2019t destroy its view.",
		"questions_answers": [
			{
				"question": "What is the best way to do ViewHolder?",
				"answer": {
					"score": 0.7629830241203308,
					"start": 167,
					"end": 178,
					"answer": "performance"
				}
			},
			{
				"question": "What is a dependency library in your project?",
				"answer": {
					"score": 0.8093308806419373,
					"start": 239,
					"end": 259,
					"answer": "RecyclerView library"
				}
			},
			{
				"question": "How many items can be shown in the screen?",
				"answer": {
					"score": 0.7364073991775513,
					"start": 432,
					"end": 448,
					"answer": "a limited number"
				}
			},
			{
				"question": "When an item scrolls off the screen, RecyclerView doesn\u2019t destroy its view?",
				"answer": {
					"score": 0.7748845219612122,
					"start": 495,
					"end": 549,
					"answer": "Flexible Data View and Thread RecyclerView vs ListView"
				}
			}
		]
	},
	{
		"context": "RecyclerView adapter forces the developer to use the ViewHolder pattern. LayoutManager allows us to choose that we want to show the row views and how to scroll. Notifying Adapter Recycle - View\u2019s adapter provides a set of notifiers to react while the data are binding to the view If your application requires an operation that does not return an immediate result, you must perform this operation in a separated thread know as worker thread. Android provides the following threads components: Android Thread: A block of code responsible to execute a set of tasks in your application Kotlin Coroutines: Kotlin coroutines provide an api that enables you to write asynchronous code.",
		"questions_answers": [
			{
				"question": "How does the RecyclerView adapter force the developer to use the ViewHolder pattern?",
				"answer": {
					"score": 0.24242132902145386,
					"start": 73,
					"end": 86,
					"answer": "LayoutManager"
				}
			},
			{
				"question": "How do View\u2019s adapter react while the data are binding to the view?",
				"answer": {
					"score": 0.13354268670082092,
					"start": 222,
					"end": 231,
					"answer": "notifiers"
				}
			},
			{
				"question": "What is a block of code responsible to execute a set of tasks in your application?",
				"answer": {
					"score": 0.7556837201118469,
					"start": 492,
					"end": 506,
					"answer": "Android Thread"
				}
			}
		]
	}
]
