SecurityExercisesExercise 1 - 31/08Block 1 - SecurityConfidentiality:Data confidentiality:Low impact: Student number should only be known by student and possibly faculty staffModerate impact: Personal information, eg. grades, contact info, messages on the account should only be available to relevant individuals Privacy:Low impact: Tracking modifiability in accordance with EU regulationsIntegrity:Data integrity:Moderate impact: Changes - and their responsible individuals - of grading and other sensitive modifiable data should be tracked to prevent corruption of dataSystem integrity:Moderate impact: Only authorized personal can change grades or personal dataAvailability:Low impact: Loss of access card - may impact student slightly but no adverse effectsModerate impact: Downtime of website - reputational damage and loss of student and faculty efficiencyConfidentiality:High impact: data package interception - depending on the contents of the data package the impact might be very great if confidential information is leakedIntegrity:Low Impact: Data packages being lost and never receivedAvailability:Low Impact: System downtime - there are other options to send data a) Medical or criminal recordsb) Trade or bank related documents that might manipulate the marketc) Military/defence systems 
Impact/objectiveConfidentialityAvailabilityIntegrityaLow: it’s public and accesible information either wayLow: Non critical info that could be gathered elsewhereModerate: Displaying false info could disrupt operations and affect the publicbHigh: Leaks can damage investigations and endanger involved personelLow: Loss of availability may impede an investigation momentarily but nothing adverseHigh: Modified data can affect a trial and result in death if eg. a murderer is let loosecModerate: data itself is not crucial but a leakage can severely damage the trustworthiness of the organizationModerate: May hamper work and cause loss of revenue due to disruptionHigh: Tampering with information in a financial organisation can lead to major losses of revenue and theft due to replaced account numbersd1) High: severe damage of the markets
2) Moderate: damage to reputation
3) High: severe damage to markets and reputation1) Moderate: disruption and potential loss of revenue
2) Low: non essential and can be accesed later 
3) Moderate: disruption1) High: Hiring based on false info, security risks and integrity
2) Low: can be rectified
3) High: e1) High: Monitoring of sensor data may expose military activity
2) High: Might present a subgoal to further penetrate the security
3) High: All information about military instalations are highly sensitive and high Impact due to higher risk of hostile targeting 1) High: disruption of power is critical for defence systems
2) Low: may be accessed later
3) High: Military systems are critical to be kept online at all times1) High: Tampered sensor data might result in power shortages/overloads of critical facilities
2) High: May present a subgoal for further penetration such as Masquerading.
3) High:a) The security design principle of Fail-safe defaults is violated.
 The code checks whether a user does NOT have access, however, instead it is much better to assume that no user has access as a standard and then check for access.b) multi-step authentication is in general a great way to increase layering, however, Psychological acceptability is at stake. Few students view their grades and data as crucial and would protest to too high security standards. As such, simple and quick authentication is best to meet the standards without antagonizing the users. I would propose the use of a Password and an SMS. Student cards is also an option but users always carry their phone, not necesarily their student card. Iris/fingerprint scanner would violate the Economy of mechanism principle as it is simply overkillBlock 2 - Group TheoryAssociative: for all integers ∀a,b,c∈G,a+(b+c)=(a+b)+c\forall a,b,c \in G, a+(b+c) = (a+b)+c∀a,b,c∈G,a+(b+c)=(a+b)+c﻿Has an identity element 0: ∃e∈G\exist e \in G∃e∈G﻿ such that ∀a∈G,a+e=a=e+a\forall a \in G, a+e = a = e+a∀a∈G,a+e=a=e+a﻿, in this case it is 0Each element has an inverse: ∀g∈∃g−1∈G\forall g \in \exist g^{-1} \in G∀g∈∃g−1∈G﻿ such that g+g−1=e=g−1+gg+g^{-1} = e = g^{-1}+gg+g−1=e=g−1+g﻿, in this case it is the negative version of any elementClosure: no matter which elements we operate on it will always result in a 16-bit binary stringAssociative: given 3 binary strings starting with 0000 0000 0000 and ending with: 0001, 0011, and 0111, noted a, b, and c respectively(a⨂b)⨂c(a\bigotimes b)\bigotimes c(a⨂b)⨂c﻿ = (0001⨂0011)⨂0111(0001\bigotimes 0011) \bigotimes 0111(0001⨂0011)⨂0111﻿ = 0010⨂0111=01010010 \bigotimes 0111 = 01010010⨂0111=0101﻿and a⨂(b⨂ca\bigotimes (b\bigotimes ca⨂(b⨂c﻿) = 0001⨂(0011⨂0111)0001\bigotimes (0011 \bigotimes 0111)0001⨂(0011⨂0111)﻿= 0001⨂0100=01010001 \bigotimes 0100 = 01010001⨂0100=0101﻿As such we have shown that it is associative as the order of operations doesn’t matterIdentity element: 0000 0000 0000 0000 because any element XOR 0000 results in the same element.Inverse: any string is its own inverse, eg. 1001⨂1001=00001001\bigotimes 1001 = 00001001⨂1001=0000﻿
Associativity: (((1+2)%20)+5)%20 = 8 and (1+((2+5)%20))%20 = 8 Identity element: 0 Inverse: for a number n = 20-n 
The set of integers contains the value 0. As such the law of identity is broken. eg. a∗b≠aa*b \not = aa∗b=a﻿ as an example: 2∗0≠22*0 \not = 22∗0=2﻿Given the empty list there is no inverse element that can be concatenated to return to the empty list.

Exercises 4 - 21/091. Alice and Bob will be running Diffie-Hellman and has agreed on the group (Z/241Z)* with generator g=7.Alice = A | xax_axa​﻿=237 | Ya=axamod q=7237mod 241=7Y_a = a^{x_a} mod \space q = 7^{237} mod \space 241 = 7Ya​=axa​mod q=7237mod 241=7﻿Bob = B | xb=9x_b = 9xb​=9﻿ | Yb=axbmod q=79mod 241=79Y_b = a^{x_b} mod \space q = 7^{9} mod \space 241 = 79Yb​=axb​mod q=79mod 241=79﻿
If Alice picks the secret a=237 and Bob picks the secret b=9, what will the secret be?Common secret key: K=(Yb)xamod qK = (Y_b) ^{x_a} mod \space qK=(Yb​)xa​mod q﻿ = 797mod 241=7479^{7} mod \space 241 = 74797mod 241=74﻿In the same group, with the same generator, Alberte and Benjamin runs Diffie-Hellman. If the adversary observes the messages A=26 (from Alberte to Benjamin) and B=85(from Benjamin to Alberte), what is the shared secret s?q = 241; alpha = 7; YA=26;YB=85Y_A = 26; Y_B=85YA​=26;YB​=85﻿Simply solve either equation by trying out different prime numbers until the equation is true: 
7amod 241=267^a mod \space 241 = 267amod 241=26﻿, a = 7amod 241=847^a mod \space 241 = 847amod 241=84﻿, a =If the adversary observes instead the messages A=44 and B=201, what is the shared secret s?
q = 241; alpha = 7; YA=44;YB=201Y_A = 44; Y_B=201YA​=44;YB​=201﻿7amod 241=447^a mod \space 241 = 447amod 241=44﻿7amod 241=2017^a mod \space 241 = 2017amod 241=201﻿
2. From the Stalling and Brown book (problem): 21.12
Ya=αXamod q=5Xamod 23=10Y_a = \alpha ^{X_a} mod \space q = 5^{X_a} mod \space 23 = 10Ya​=αXa​mod q=5Xa​mod 23=10﻿, Xa=X_a =Xa​=﻿5amod 23=85^a mod \space 23 = 85amod 23=8﻿, a =
 3. On the Kali VM, you'll find the gpg tool preinstalled. Use this tool in the following exercise. On a forum for ITU students of dubious virtue, you find this file, ostensibly the answers to the multiple choice part of the SECURITY, BSC course final examination.Decrypt the file. Perhaps the passphrase is "appliedcrypto".The file contains a number of versions of the answer for a multiple-choice examination.Find out which version is signed by this key.Do you have reasons to believe at this point that the version signed with that key was really authored by Rosario?You will find these command helpful (try gpg --help for details. Or google.):gpg --decrypt filenamegpg --verify signature-file contents-filegpg --import key-filegpg --recv-keys key-id
4. Stallings & Brown, Chapter 2, Review questions 2.9, 2.115. - Stallings & Brown, Chapter 2, Problems 2.5Exercises 7 - 26/10Access inheritance - 644 grants read and write permission to the owner of the file, and read permission to the group and others so this would usually protects the file, however, since the directory is 730 whit priveleges for the group the write and execute, then they are inherited to all group members and therefore the file is not secure.
a) Access rights:Funding RG = age greater than 35Funding TG = age lower or equal to 35R1: can_access(u, f, e)Age(u)>35∧funding(f)∈{RG}Age(u) > 35 \wedge funding(f)\in \{RG\}Age(u)>35∧funding(f)∈{RG}﻿Age(u)≤35∧funding(f)∈{RG,TG}Age(u) \le 35 \wedge funding(f) \in \{RG, TG\}Age(u)≤35∧funding(f)∈{RG,TG}﻿

Given the following 12 policy rules below, find the 7 potential conflicts.R1: Generally, a document classified at the secret level ought to be downgraded after 10 years.
R2: Generally, a document classified at the confidential level ought to be downgraded after 5 years.

R3: The downgrading type of any occasional mission plan must be “at a time” and this document has to be downgraded in a short time.
R4: The downgrading type of any permanent mission plan must be “by order”.
R5: The downgrading type of any mission report must be “at a time”.  For any other document,

R6: if it is classified at the secret level, then it has to be downgraded, at the confidential level, after 10 years.
R7: if it is classified at the confidential level, then it has to be downgraded, at the public level, after 5 years

R8: A mission plan has to be downgraded “at a time”.
R9: A mission report has to be downgraded “by order”.
R10: A mission report which deals with a computer failure has to be downgraded “at a time”.
R11: A mission plan which deals with a mission which has been cancelled has to be downgraded “by order”.
R12: Any mission plan has to be downgraded, at the public level, the day after the end of the missionR1 and R3 - specific date and unspecific date for downgrading R7 and R12 - the date for downgrading for mission plans are conflictingR2 and R6 - confidential ought to be downgraded after 5 years but R6 states 10 years R1 and R6 ought to be and has to be

Lecture notesLecture 31/08Types of adversaries:Activists: Political agenda, attacks for a political agendaVandals: For fun and gigglesCriminals: Main purpose is echonomicalStates: War and Putin being a dick
Cyclic groups: 
Lecture 2 07/09We are allowing the adversary control of the network but not of our machine. The adversary can basically change or block any form of communication on the network.This is fx. the case when using a standard TCP stack which is easy to attack.
Physical layer: Responsible for transmission of binary data across a physical link. 

IP Spoofing: This is, however, hard to do these days due to modern security measures. 
TCP: helps to limit how many messages arrive to avoid overload and make sure the received packages are received, reordered to initial order and will make sure that not received packages are re-sent. 

Firewalls: Filters traffic through to a network based upon given rules.
Presentations 30/11
ExamSlides compilation: https://s3-us-west-2.amazonaws.com/secure.notion-static.com/02dc3b96-58a2-4f9b-a2b8-707f9ea19af8/combined.pdfhttps://s3-us-west-2.amazonaws.com/secure.notion-static.com/552b26ca-25e8-45f1-8edf-ee0d574b442d/ExamSetsCombined.pdfhttps://s3-us-west-2.amazonaws.com/secure.notion-static.com/292fee61-fa51-42f5-b079-adb49f1c960f/Security_Re-exam_prep.docxExam QuestionsPrinciples
Authentication and Access Control

Network Security + Network Services
System Security + Logging and log analysis

Web-Application Security
Cryptography

Security Protocols
Penetration testingAdvanced Crypto
MSC Computer networksRe examSecurity Re-Exam prepSecurity Principles/Goals and Authentication – ca. 12:00Security Goals(CIA):ConfidentialityData confidentiality: private or confidential information is not made available or disclosed to unauthorized individuals.Privacy: individuals control or influence what information related to them may be collected and stored and by whom and to whom that information may be disclosedAttacks:Eavesdropping: Reading messages on the networkMan in the middle: attacker secretly relays and possibly alters the communications between two parties who believe that they are directly communicating with each other, as the attacker has inserted themselves between the two partiesIntegrityData integrity: information and programs are changed only in a specified and authorized mannerSystem Integrity a system performs its intended function in an unimpaired manner, free from deliberate or inadvertent unauthorized manipulation of the systemAttacks:Masquerading:Message tamperingReplaying:Availability: systems work promptly, and service is not denied to authorized usersAttacks:DOSDistributed DOSPrinciples:Economy of mechanism: design of security measures embodied in both hardware and software should be as simple and small as possible to ease testing and verification to minimize weaknessesFail-safe defaults: access decisions should be based on permission rather than exclusion. No access as standard and then check for permissions – not vice versa.Complete mediation: every access must be checked against the access control mechanism. Systems should not rely on access decisions retrieved from a cacheOpen design: the design of a security mechanism should be open rather than secret. The algorithms can then be reviewed by many experts, and users can therefore have high confidence in them.Separation of privilege: multiple privilege attributes are required to achieve access to a restricted resource eg. multifactor user authentication.Least privilege: every process and every user of the system should operate using the least set of privileges necessary to perform the taskLeast common mechanism: design should minimize the functions shared by different users, providing mutual security. Reduces interception risk and easy to verify security implications.Psychological acceptability: security mechanisms should not interfere unduly with the work of users, and at the same time meet the needs of those who authorize access.Isolation: limit the number of systems on which high risk data are stored and isolate them, either physically or logicallyEncapsulation: a specific form of isolation based on object-oriented functionality. Protection is provided by encapsulating a collection of procedures and data objects in a domain of its own so that the internal structure of a data object is accessible only to the procedures of the protected subsystem.Modularity: provide common security functions and services, such as cryptographic functions, as common modules that can be invoked by numerous protocols and applications.Layering: use of multiple, overlapping protection approaches addressing the people, technology, and operational aspects of information systems. failure or circumvention of any individual protection approach will not leave the system unprotected.Least astonishment: a program or user interface should always respond in the way that is least likely to astonish the user.No single point of failure: if one part of the system fails, the other parts will not – avoid having a critical section that could compromise everything.Authentication and Access control:Definition: Verify a claim of identity.Factors of authentication:Knowledge – something you know – password pin etc.Possession – something you have – smartcard, token etc.Inherence – something you are – biometrics eg. fingerprintCommon type of authentication:PasswordsTake a password and check against the ID and it’s registered passwordVulnerable:Brute force + dictionary attacks + popular passwordsPassword guessingSnooping – watching over your shoulderSpoofing – Fake websites trying to make you type your passwordHow to ensure authentication:Multi-factor authentication – password plus one of the following:Token-based authenticationSomething you own – access card, Electronic keyIdentifies object rather than userRisks being lostRequires infrastructure – can be costlyBiometric authenticationSomething you arePhysiological:Fingerprint or eyesBehavioral:Voice or patternsVery secure – hard to fake/trickRisk of false-negatives and positivesVery expensive to implementStoring keys safely – SALT + HMAC functions.SALT:salt serves three purposes:prevents duplicate passwords from being visible in the password filegreatly increases the difficulty of offline dictionary attacks - number of possible passwords is increased with, b bits, a factor of 2^bnearly impossible to find out whether a person with passwords on two or more systems has used the same password on all of themSteps in salting:Create salt by taking random number/related to current timeAppend salt to the passwordHASH the combination of the 2 passwordsMake sure the hashing function is “slow” to make brute-force infeasibleStore hashed salt-password with a plaintext version of the salt in the password fileWhen needed, the salt can be used to reverse hash the salt-password and verify the password typed by the userSymmetric & Assymmetric Cryptography – way too much ca. 10:40Overview - What is symmetric and asymmetric cryptography?Usage: Used to protect data confidentiality, integrity and availability on insecure networksIt is various algorithms that utilize strings aka. keys to encrypt/decrypt messages and check authenticityComparison:symmetric cryptographyUses same key both for encryption and decryptionKey must be exchanged somehow beforehandExamples:Simple: Caesar’s cipher & Block cipherOnly protects confidentialityAdvanced additions: MAC Algorithm, Hash definitionsEnsures confidentiality, integrity and authenticityFx. useful for storing passwords very securelyasymmetric cryptographyUses two different keys, private and public keys.Public key is available to anyonePrivate key is only known by the receiverRequires a key exchange algorithm such as Diffie-HellmanExamplesEl-Gamal algorithmEncryption basics:Transforming a string into a different semantically equivalent one(encryption) that can be decrypted againAlgorithms create a ciphertext that can be translated to message if one has the right key.Generate ciphertext: c = ℰ(m,k), forc = ciphertext, ℰ = encryption function, m = message, and k = keyDecrypt message: m = D(c,k’)D = reverse encryption function, k’ = another(or same) keyCorrectnessApplying the decryption to an encrypted message yields the original message: D(ℰ(m,k),k) = mSecurity: a different key will yield a different result:  ∀k’. k’ ≠ k ⟶ D(ℰ(m,k),k’) ≠ mSymmetric CryptographyDifferent types:Caesar’s cipher:Simply have two wheels with letters that must be aligned correctly to decipher the messageSimple and can be brute forced by looking at frequencies of lettersPerfect Secrecy – One-time PadUtilize XOR for encryption and decryptionConvert message to binaryXOR binary string with key binary-stringDecrypt by reusing XOR key on resulting stringCan only be used once, cause you can brute force the keyBlock CipherDivide plaintext into fixed-size blocksGenerate a secret key to encrypt/decryptPerform XOR on the plaintext blocks 1 or more timesThe result is the ciphertextApply the reverse operations for the key on each block to decipherAES – an advanced block cipherHas the following extra steps:Byte substitution layer – S-box mix of bytesDiffusion layer – Shift rows and columnsKey Addition layer – XOR the different BytesHash Functionstakes an arbitrary block of data and returns a fixed-size bit stringHashes the valueMAC – Message Authentication CodesAdds integrity and AuthenticitySteps:Select secret key -Prepare messageAdd padding to ensure it’s a multiple of the MAC algorithm block sizeHASH FunctionCombine message and secret key to generate the MACApply hash function to the new messageMAC verificationUse same key and MAC algorithm to decryptCompare calculated MAC to the received MAC from the messageIf same = authentic. Else it has been tampered withAsymmetric CryptographyThe public key can be used to create a ciphertext by encrypting a plaintext.  The secret key can be used to decrypt the ciphertext back to plaintext.Key Exchange to allow for symmetric cryptography:Diffie-Helmann key exchangesecure under the Computational Diffie-Hellman assumption:Steps, sender S, receiver RS and R agree on a prime number ‘p’ and base ‘g’Both generate random private keys, s and rBoth generate public keys as S = and R=Each participant send their public key to the otherEach participant calculates a shared key using their private key and the other’s public keySender:Receiver:Shared key can now be used for encryption and decryptionDifferent typesRSA EncryptionEl Gamal Encryption – built on the principle of Diffie hellmanSteps:EncryptionSender, s, and Receiver, r, agrees on generator g, and prime, pBoth generate a private and public keyExchange public keyss represents the message, m, as an integers calculates c1=g^k (mod p)s calculates c2 = m*h^k (mod p), where h is the public key of rs sends the ciphertext as a touple (c1, c2) to rDecryptionr receives ciphertext (c1, c2)r calculates k = c1^x (mod p), where x is r’s private keyr receives the message by calculating  m = c2 * (c1^x)^-1 (mod p)Digital SignaturesAdds integrity + authenticitySteps:Secret key to create signaturePublic/Verification key to verify signatureCreate signature: q = sign(m, sk)Verify signature: d = ver(q, m, vk)For El gamalKey generationChoose a random secret keyCompute private key: pk = g^(sk) mod pSignatureChoose random integer k such that k is relatively prime to p-1compute r=g^k mod pcompute s = (H(m)-sk ·r)k^(-1) mod (p-1),  if s=0, go to step 1output (r,s)VerificationCheck that 0<r<p and 0<s<p-1Check thatOutput 1 if and only if all checks pass, output 0 otherwiseSecure Channels – Need more 9:23What are secure channelsa communication path between two parties that is protected against unauthorized access, interception, modification, or tamperingPurposeused to maintain our security goals of Confidentiality, Integrity, and AvailabilityProtects against attacksEavesdroppingData-tamperingMan-in-the-middle attacksTypes of secure channels – Explain them brieflyVPNsCreates a secure connection to a network rather than a websiteUses authentication and encryptionEncrypts all communication between the two systemsSSL – Older version of TLS, with weaker algorithmsTLSHandshake protocol stepsClient sends “hello” – gives cryptographic algorithms and protocols that it supportsServer hello – informs of selected algorithm and protocol + a random number(server nonce)Server sends public keyClient generates own random number(client nonce) and uses it and the server nonce to create a premaster secretClient encrypts and sends premaster secret to serverServer decrypts by using its private key and generates a session key for further communicationServer sends session key and “finished” to clientClient replies with “finished” when session key is receivedAlert protocolFatal alert – e.g. incorrect MAC or unexpected messageWarning alerts – Certificate issuesHeartbeat protocolPings the peer to keep connection openHTTPS Steps ????????Establishes TCP connectionChecks certificatesTLSRole of public key infrastructure(PKI)Digital certificatescontains information about the identity of the website or individual and the public key associated with their digital signatureused to validate the authenticity of the parties involved in the communication.issued by trusted third-party organizations known as certificate authorities (CAs)Online Certificate Status Protocol(OCSP)An Internet standard to validate another participant through a third party CACRL lists are regularly checked and cached in case the CA isn’t available when needed and to reduce latencyCertificate Revocation List (CRL)lists of certificates not to be usedSigned by the same CA who issued the certificatesBrowsers periodically access CA servers to fetch recent CRLsHow to identify a compromised CA ????????????Audit proofsRoot certification AuthoritySigns other CA’s certificatesSigns its own certificateCertificate transparencya mechanism for publicly logging all a CA’s SSL/TLS certificatesto provide a way to detect and prevent the issuance of fraudulent or unauthorized SSL/TLS certificatesThreats to secure channelsDOS attacksPenetration Testing - decent 09:50What is pentestinga type of security testing that involves identifying and exploiting vulnerabilities in a computer system or network in order to evaluate its security.The goal of pen testing is to simulate a real-world attack and determine the potential risks and impact of a successful attack.Types of testingBlack box testing – no knowledge of the inner workingWhite box testing – Full knowledge of the inner workingsGrey box testing – Some knowledge of the system but not full accessHow is it carried outHTTP requestsInjection attacksSQL injectionQuery “SELECT * FROM users”Username = ‘something’ OR 1=1Command injectionCross-site scripting attacks(XSS) – HTML injectionMalicious code is injected into a vulnerable web applicationWhen someone connects to the server, the malicious code is passed to their browserSteps of pentestingInformation gatheringGathering informationIP addresses, System architecture, OS, etc.Black box audit - assess the system's security postureVulnerability analysisUsing collected data to find vulnerabilitiesInitial accessUtilising weaknesses to gain accessFx. Guessing passwords or SQL injectionsCross-site scriptingPrivilege EscalationWhy?Read/Write anythingPermanent backdoorHowKernel exploitsServices running on rootMaintain Access and cover tracksInstall rootkitDeleting log filesMonitoring the systemNetwork sniffers or port scanners to monitor traffic and detect vulnerabilitiesSystem hardeningThe process of securing a computer system by reducing its vulnerability to attacksThe purpose is to make it hard for attackers to gain access or exploit weaknessesStepsUpdating software – make sure latest security patches are installedDisabling unnecessary services – Reduces the attack surface and makes it harder to find and exploit vulnerabilitiesConfiguring user accounts and access controls2-step authenticationStrong password rulesLimiting user access to minimum required rightsConfiguring firewalls and intrusion detection systems to avoid initial accessEncrypting data – protects sensitive dataRegular monitoring and testing – penetration testing regularly to find weaknessesNotes:Layers(NOT NECESSARY):Physical layer:Transmission of binary data across a physical linkActual physical aspects such as messages running through cablesInfrastructure broadcasting messages.Servers and databasesVulnerable to:EavesdroppingTamperingDOSMessage injectionData-link layer:Transmission of packets between hosts connected by a physical linkThe data communication, aka what happens with the messages and how they’re handledVulnerable to:TamperingMessage injection/MAC spoofingEavesdroppingNetwork LayerIP protocols – how messages through the Data-link layer are received and sent between participantsVulnerable to:ARP Cache Spoofing: Redirecting traffic from an IP to another machineIP Spoofing: Faking IP to make an internet router send a response to the faked ID – can be used to send a lot of requests and the responses then flood a target server.DHCP Starvation:Transport layerConnection-oriented, reliable, streaming protocol – protocols for how packages of data are transmittedApplication Layerensures an application can effectively communicate with other applications on different computer systems and networks.specifies the shared communications protocols and interface methods used by hosts in a communications network.
